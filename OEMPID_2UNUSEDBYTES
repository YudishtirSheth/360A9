* HERE, 9 BYTES FROM OEMPID+1 IS MOVED TO OEMPID. 2 UNUSED BYTES SHOW IN OUTPUT.
*
//KC03AC1A JOB ,'Y. SHETH',MSGCLASS=H
//JSTEP01  EXEC PGM=ASSIST
//STEPLIB  DD DSN=KC00NIU.ASSIST.LOADLIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
*****************************************************************
*                                                               *
*  CSCI 360              ASSIGNMENT 9             SPRING 2024   *
*                       PACKED DECIMAL                          *
*                                                               *
*   DEVELOPER NAME: Yudishtir Sheth                             *
*                                                               *
*          DUE DATE: 4/19/2024                                  *
*                                                               *
* MAIN PROGRAM NAME: PAYROLL2                                   *
*                                                               *
*          FUNCTION: This program produces a report             *
*                    of semi-monthly payroll for State of       *
*                    Illinois National Bank using               *
*                    sub programs.                              *
*                                                               *
*****************************************************************
*
PAYROLL2 CSECT
*
*  STANDARD ENTRY LINKAGE WITH R12 AS BASE REGISTER
*
         STM   14,12,12(13)  SAVE REGS IN CALLER'S SAVE AREA
         LR    12,15         COPY CSECT ADDR INTO R12
         USING PAYROLL2,12   ESTABLISH R12 AS THE BASE REG
         LA    14,REGSAVE    R14 POINTS TO THIS CSECT'S SAVE AREA
         ST    14,8(,13)     STORE ADDR OF THIS CSECT'S SAVE AREA
         ST    13,4(,14)     STORE ADDR OF CALLER'S SAVE AREA
         LR    13,14         POINT R13 AT THIS CSECT'S SAVE AREA
*
*
*  BUIDL TABLE HAS 120 ENTRIES OF 42 BYTES. EQUIVALENT TO 5040
*  BYTES THEREFORE WE NEED TO ESTABLISH A SECOND BASE REG
*
         LA    11,4095(,12)  R11 -> PAYROLL2
         LA    11,1(,11)     R11 -> PAYROLL2+4096
         USING PAYROLL2+4096,11  ESTABLISH R11 TO TAKE OVER
*
*  CALL TO SUBPROGRAM:BUILDTBLE TO BUILD THE TABLE
*
         LA    1,BTPARMS        POINT R1 TO 1ST BYTE OF BTPARMS
         L     15,=V(BUILDTBL)  VIRTUAL ADDR OF SUBP IN R15
         BALR  14,15            LAST 3 BYTES OF PSW IN R14
*
*
*  CALL TO SUBPROGRAM:PROCTABLE TO BUILD THE TABLE
*
         LA    1,PTPARMS         POINT R1 TO 1ST BYTE OF BTPARMS
         L     15,=V(PROCTBL)  VIRTUAL ADDR OF SUBP IN R15
         BALR  14,15             LAST 3 BYTES OF PSW IN R14
*
*         DC    H'0'
*
*  STANDARD EXIT LINKAGE WITH RC OF 0
*
         SR    15,15        R15 = RETURN CODE OF 0
         L     13,4(,13)    POINT R13 TO CALLER'S SAVE AREA
         L     14,12(,13)   RESTORE REGISTER 14
         LM    0,12,20(13)  RESTORE R0 THRU R12
*
         BR    14           RETURN TO CALLER
*
         LTORG
*
REGSAVE  DS    18F          PROGRAM'S REGISTER SAVE AREA
*
* TABLE DECLARATION
EMPTBL   DS   120CL42      TABLE DECLARATION
*
* PACKED DECIMAL VARIABLES
*
PFWHPCT  DC    PL4'0'   PACKED FEDERAL WITHHOLDING PERCENTAGE
PSWHPCT  DC    PL4'0'   PACKED STATE WITHHOLDING PERCENTAGE
*
PEMPCTR  DC    PL3'0'   PACKED EMPLOYEE COUNTER (MAX 999)
PPAGECTR DC    PL2'0'   PACKED PAGE COUNTER (MAX 999)
*
BTPARMS  DC    A(PFWHPCT)  ADDR CONST FOR PFWHPCT
         DC    A(PSWHPCT)  ADDR CONST FOR PSWHPCT
         DC    A(EMPTBL)   ADDR CONST FOR EMPTBL
         DC    A(PEMPCTR)  ADDR CONST FOR PEMPCTR
*
PTPARMS  DC    A(PFWHPCT)  ADDR CONST FOR PFWHPCT
         DC    A(PSWHPCT)  ADDR CONST FOR PSWHPCT
         DC    A(EMPTBL)   ADDR CONST FOR EMPTBL
         DC    A(PEMPCTR)  ADDR CONST FOR PEMPCTR
*
$TAXPCT  DSECT
$FWHPCT   DS    ZL6
$SWHPCT   DS    ZL6
*
$EMPENT1 DSECT           EMPLOYEE TABLE ENTRY DSECT
$TEMPID1  DS    PL5      EMPLOYEE ID NUMBER
$THRPAY1  DS    PL3      HOURLY PAY RATE
$THOURS1  DS    PL3      HOURS WORKED
$TDEDCT1  DS    PL3      DEDUCTIONS
$TBONUS1  DS    PL3      BONUS EARNED
$TEMPNM1  DS    CL25     EMPLOYEE NAME
*
$INPREC1 DSECT           INPUT RECORD DSECT
$IEMPID1  DS    ZL8      INPUT FIELD TO STORE EMPLOYEE ID
$IHRPAY1  DS    ZL5      INPUT FIELD TO STORE HOURLY PAY
$IHOURS1  DS    ZL5      INPUT FIELD TO STORE HOURS WORKED
$IDEDCT1  DS    ZL5      INPUT FIELD TO STORE DEDUCTIONS
$IBONUS1  DS    ZL5      INPUT FIELD TO STORE BONUS
$IEMPNM1  DS    CL25     INPUT FIELD TO STORE EMPLOYEE NAME
*
BUILDTBL  CSECT
*
*  STANDARD ENTRY LINKAGE WITH R12 AS BASE REGISTER
*
         STM   14,12,12(13)  SAVE REGS IN CALLER'S SAVE AREA
         LR    12,15         COPY CSECT ADDR INTO R12
         USING BUILDTBL,12   ESTABLISH R12 AS THE BASE REG
         LA    14,BLTSAVE    R14 POINTS TO THIS CSECT'S SAVE AREA
         ST    14,8(,13)     STORE ADDR OF THIS CSECT'S SAVE AREA
         ST    13,4(,14)     STORE ADDR OF CALLER'S SAVE AREA
         LR    13,14         POINT R13 AT THIS CSECT'S SAVE AREA
*
         LM    2,5,0(1)       R2 -> PFWHPCT (4 BYTES)
*                             R3 -> PSWHPCT (4 BYTES)
*                             R4 -> EMPTBL  (5040 BYTES)
*                             R5 -> PEMPCTR (3 BYTES)
*
         LA    6,TXPRCT
         USING $TAXPCT,6
         XREAD $TAXPCT,80       READ THE FIRST RECORD (TAXVALS)
*
         PACK  0(4,2),$FWHPCT(6)  PACK 1ST 6 BYTES:FEDWITH PRCNT
         PACK  0(4,3),$SWHPCT(6)  PACK 6 BYTES 7 OFF R6:SWITH
*                                 PERCENT
*
         USING $EMPENT1,4     ASSOCIATE $EMPENT1 WITH EMPTBL
*
         LA    7,RECORD       LOAD INPUT RECORD INTO R7
         USING $INPREC1,7     ASSOCIATE $INPREC1 WITH RECORD
*
         XREAD $INPREC1,80    PRIMARY READ EMPLOYEE RECORD
*
LOOP1    BNZ   ENDLOOP1        BRANCH TO ENDLOOP IF 0
*
         AP    0(3,5),=PL1'1'   INCREMENT EMPCTR
*
         PACK  $TEMPID1(5),$IEMPID1(8) PACK EMPLOYEE ID
*
         MVC   $TEMPNM1(25),$IEMPNM1  MOVE EMPNAME
*
         PACK  $THRPAY1(3),$IHRPAY1(5) PACK HOURLY PAY
         PACK  $THOURS1(3),$IHOURS1(5) PACK HOURS WORKED
         PACK  $TDEDCT1(3),$IDEDCT1(5) PACK DEDUCTIONS
         PACK  $TBONUS1(3),$IBONUS1(5) PACK BONUS
*
*
         LA    4,42(,4)        OVERLAY NEXT ENTRY'S BYTES
*
         XREAD $INPREC1,80     SECONDARY READ EMPLOYEE RECORD
*
         B     LOOP1  BRANCH BACK TO LOOP 1
*
*  STANDARD EXIT LINKAGE WITH RC OF 0
*
ENDLOOP1 SR    15,15          R15 = RETURN CODE OF 0
         DROP  6,4,7            DISSOCIATE DSECTS
*
         L     13,4(,13)      POINT R13 TO CALLER'S SAVE AREA
         L     14,12(,13)     RESTORE REGISTER 14
         LM    0,12,20(13)    RESTORE R0 THRU R12
*
         BR    14             RETURN TO CALLER
*
         LTORG
*
         ORG   BUILDTBL+((*-BUILDTBL+31)/32)*32
         DC    C'* PROGRAM STORAGE FOR BUILDTBL *'
*
BLTSAVE  DS    18F     BUILDTBL'S REGISTER SAVE AREA
*
TXPRCT   DS    0H
IFWHPCT  DS    ZL6     INPUT FIELD FOR FEDERAL WTH PERCENTAGE
ISWHPCT  DS    ZL6     INPUT FIELD FOR STATE WTH PERCENTAGE
         DS    CL68
*
RECORD   DS    0H       INPUT FIELD OF ZEROS
IEMPID   DS    ZL8      INPUT FIELD TO STORE EMPLOYEE ID
IHRPAY   DS    ZL5      INPUT FIELD TO STORE HOURLY PAY
IHOURS   DS    ZL5      INPUT FIELD TO STORE HOURS WORKED
IDEDUCT  DS    ZL5      INPUT FIELD TO STORE DEDUCTIONS
IBONUS   DS    ZL5      INPUT FIELD TO STORE BONUS
IEMPNME  DS    CL25     INPUT FIELD TO STORE EMPLOYEE NAME
         DS    CL27
*
$EMPENT2 DSECT           EMPLOYEE TABLE ENTRY DSECT
$TEMPID2  DS    PL5      EMPLOYEE ID NUMBER
$THRPAY2  DS    PL3      HOURLY PAY RATE
$THOURS2  DS    PL3      HOURS WORKED
$TDEDCT2  DS    PL3      DEDUCTIONS
$TBONUS2  DS    PL3      BONUS EARNED
$TEMPNM2  DS    CL25     EMPLOYEE NAME
*
PROCTBL  CSECT
*
*  STANDARD ENTRY LINKAGE WITH R12 AS BASE REGISTER
*
         STM   14,12,12(13)  SAVE REGS IN CALLER'S SAVE AREA
         LR    12,15         COPY CSECT ADDR INTO R12
         USING PROCTBL,12   ESTABLISH R12 AS THE BASE REG
         LA    14,PROCSAVE    R14 POINTS TO THIS CSECT'S SAVE AREA
         ST    14,8(,13)     STORE ADDR OF THIS CSECT'S SAVE AREA
         ST    13,4(,14)     STORE ADDR OF CALLER'S SAVE AREA
         LR    13,14         POINT R13 AT THIS CSECT'S SAVE AREA
*
         LM    2,5,0(1)       R2 -> PFWHPCT (4 BYTES)
*                             R3 -> PSWHPCT (4 BYTES)
*                             R4 -> EMPTBL  (5040 BYTES)
*                             R5 -> PEMPCTR (3 BYTES)
*
         ST    2,CNPPARMS+8  STORE PFWHPCT INTO CNPPARMS
         ST    3,CNPPARMS+16  STORE PSWHPCT INTO CNPPARMS
         ST    5,CAPARMS+4    STORE PEMPCTR INTO CAPARMS
*
* DSECT LAYS OVER TABLE ENTRIES. USED TO INPUT INTO OUTFIELDS
*
         USING $EMPENT2,4     ASSOCIATE $EMPENT2 WITH EMPTBL
*
         ZAP   PLOOPCTR(3),0(3,5)  STORE PEMPCTR INTO R6 FOR LOOP
*
         CP    PLOOPCTR(3),=PL1'0'      COMPARE PEMPCTR WITH 0
*
         LA    6,99  SET R6 TO 99 ENSURING HEADERS
*
LOOP2    BZ    TOTAVG   BRANCH TO TOTAVG ONCE ALL ENTRIES READ
*
         MVI   DETAIL+1,C' '  INSERTS A SPACE AS THE CARRIAGE
         MVC   DETAIL+2(131),DETAIL+1  SETS THE DETAIL TO SPACES
*
         MVC   OEMPID(11),=X'4021202020602020202020'
         MVC   OEMPID(10),OEMPID+1
         ED    OEMPID(10),$TEMPID2       PRINT EMPLOYEE ID
*
         MVC   OEMPNME(25),$TEMPNM2  MOVE EMPNAME
*
         LA    1,OHRPAY+3  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OHRPAY(7),=X'402021204B2020'  HRPAY FORMATTING
         EDMK  OHRPAY(7),$THRPAY2              PRINT HOURLY PAY
         BCTR  1,0                           DECREMNT REG 1 BY 1
         MVI   0(1),C'$'                     PLACE DOLLAR SIGN
*
         MVC   OHOURS(7),=X'402021204B2020'  HOURS FORMATTING
         ED    OHOURS(7),$THOURS2  PRINT HOURS WORKED
*
         ZAP   PEMPGPAY(6),$THRPAY2(3)  ZAP HRLY PAY INTO PEMPGPAY
*
         MP    PEMPGPAY(6),$THOURS2(3)  MULT HOURLY PAY BY HOURS
*
         SRP   PEMPGPAY(6),64-2,5     ROUND GPAY TO 2 DECIMALS
*
         SP    PEMPGPAY(6),$TDEDCT2(3) SUBTRACT DEDUCTIONS
*
         AP    PEMPGPAY(6),$TBONUS2(3)  ADD BONUS
*
         LA    1,OGROSS+10  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OGROSS(14),=X'402020202020206B2021204B2020'
         EDMK  OGROSS(14),PEMPGPAY          PRINT GROSS PAY
         BCTR  1,0                          DECREMNT REG 1 BY 1
         MVI   0(1),C'$'                    PLACE DOLLAR SIGN
*
* SUBPROGRAM CALL FOR CALCULATING 2 WITH AMOUNTS AND NET PAY
*
         LA    1,CNPPARMS       R1 POINTS TO 1ST BYTE OF CNPPARM
         L     15,=V(CALCNPAY)  VIRTUAL CONST STORED IN R15
         BALR  14,15            LINK R15 TO R14 AND BRANCH
*
         LA    1,OFEDWH+10  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OFEDWH(14),=X'402020202020206B2021204B2020'
         EDMK  OFEDWH(14),PFEDWITH    PRINT FEDWITH
         BCTR  1,0                    DECREMENT REG 1 BY 1
         MVI   0(1),C'$'              PLACE DOLLAR SIGN
*
         LA    1,OSTWH+10  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OSTWH(14),=X'402020202020206B2021204B2020'
         EDMK  OSTWH(14),PSTWITH      PRINT STATEWITH
         BCTR  1,0                    DECREMENT REG 1 BY 1
         MVI   0(1),C'$'              PLACE DOLLAR SIGN
*
         LA    1,ONETPAY+10  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   ONETPAY(14),=X'402020202020206B2021204B2020'
         EDMK  ONETPAY(14),PEMPNPAY   PRINT STATEWITH
         BCTR  1,0                    DECREMENT REG 1 BY 1
         MVI   0(1),C'$'              PLACE DOLLAR SIGN
*
         AP    PTGRPAY(7),PEMPGPAY(6)  ADD PEMPGPAY TO PTGRPAY
         AP    PTFWITH(7),PFEDWITH(6)  ADD PFEDWITH TO PTFWITH
         AP    PTSWITH(7),PSTWITH(6)   ADD PSTWITH TO PTSWITH
         AP    PTNETPAY(7),PEMPNPAY(6) ADD PEMPNPAY TO PTNETPAY
*
         C     6,=F'17'                COMPARE REG 2 WITH 18
*
         BL    NOHEADRS             BRANCH IF REG 2 LESS THAN 18
*
         AP    PPAGECTR(2),=PL1'1'  ADD 1 TO THE PPAGECTR
         MVC   OPAGECTR(4),=X'40202120'  FORMAT OPAGECTR
         ED    OPAGECTR(4),PPAGECTR      PRINT OPAGECTR
         SR    6,6                       RESET REG 2 TO 0
*
         XPRNT TITLE1,133    PRINT TITLE: 'STATE OF...'
         XPRNT TITLE2,133    PRINT TITLE: 'SEMI-MON...'
         XPRNT HEADER1,133   PRINT COLHDR:'EMPLOYEE...'
         XPRNT HEADER2,133   PRINT COLHDR:'ID...'
         XPRNT HEADERL,133   PRINT UNDERLINES
*
NOHEADRS XPRNT DETAIL,133  PRINTS THE EMPLOYEE RECORD
*
         LA    6,1(,6)       ADD 1 TO REG 6
*
         LA    4,42(,4)        OVERLAY NEXT ENTRY'S BYTES
*
         SP    PLOOPCTR(3),=PL1'1'       SUBTRACT CTR BY 1
*
         CP    PLOOPCTR(3),=PL1'0'      COMPARE PEMPCTR WITH 0
*
         B     LOOP2  BRANCH BACK TO LOOP 1
*
TOTAVG   AP    PPAGECTR(2),=PL1'1'       ADD 1 TO THE PPAGECTR
         MVC   OPAGECTR(4),=X'40202120'  FORMAT OPAGECTR
         ED    OPAGECTR(4),PPAGECTR      PRINT OPAGECTR
*
         XPRNT TITLE1,133    PRINT 1ST LINE OF TITLE
         XPRNT TITLE2,133    PRINT 2ND LINE OF TITLE
         XPRNT TITLET,133    PRINT 'TOTALS' ON LAST PAGE
*
         MVC   OEMPCTR(6),=X'402020202120'  FORMAT OEMPCT
         ED    OEMPCTR(6),PEMPCTR
*
         LA    1,OTGPAY+12  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OTGPAY(16),=X'4020202020202020206B2021204B2020'
         EDMK  OTGPAY(16),PTGRPAY   PRINT GROSSPAY
         BCTR  1,0                  DECREMENT REG 1 BY 1
         MVI   0(1),C'$'            PLACE DOLLAR SIGN
*
         LA    1,OTFWITH+12  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OTFWITH(16),=X'4020202020202020206B2021204B2020'
         EDMK  OTFWITH(16),PTFWITH  PRINT FEDWITH
         BCTR  1,0                  DECREMENT REG 1 BY 1
         MVI   0(1),C'$'            PLACE DOLLAR SIGN
*
         LA    1,OTSWITH+12  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OTSWITH(16),=X'4020202020202020206B2021204B2020'
         EDMK  OTSWITH(16),PTSWITH  PRINT STATEWITH
         BCTR  1,0                  DECREMENT REG 1 BY 1
         MVI   0(1),C'$'            PLACE DOLLAR SIGN
*
         LA    1,OTNETPAY+12  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OTNETPAY(16),=X'4020202020202020206B2021204B2020'
         EDMK  OTNETPAY(16),PTNETPAY  PRINT STATEWITH
         BCTR  1,0                    DECREMENT REG 1 BY 1
         MVI   0(1),C'$'              PLACE DOLLAR SIGN
*
         SRP   0(3,5),2,0        EVEN OUT NUM OF IMPLIED DEC
*
         ZAP   PAVG(7),PTGRPAY(7)  ZAP GROSS PAY TO PAVG
*
* SUBPROGRAM CALL FOR CALCULATING AVERAGES
*
         LA    1,CAPARMS       R1 POINTS TO 1ST BYTE OF CNPPARM
         L     15,=V(CALCAVG)  VIRTUAL CONST STORED IN R15
         BALR  14,15            LINK R15 TO R14 AND BRANCH
*
         LA    1,OAGPAY+12  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OAGPAY(16),=X'4020202020202020206B2021204B2020'
         EDMK  OAGPAY(16),PAVG     PRINT AVGGROSSPAY
         BCTR  1,0                 DECREMENT REG 1 BY 1
         MVI   0(1),C'$'           PLACE DOLLAR SIGN
*
         ZAP   PAVG(7),PTFWITH(7)  ZAP GROSS PAY TO PCALC
*
* SUBPROGRAM CALL FOR CALCULATING AVERAGES
*
         LA    1,CAPARMS       R1 POINTS TO 1ST BYTE OF CNPPARM
         L     15,=V(CALCAVG)  VIRTUAL CONST STORED IN R15
         BALR  14,15            LINK R15 TO R14 AND BRANCH
*
         LA    1,OAFWITH+12  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OAFWITH(16),=X'4020202020202020206B2021204B2020'
         EDMK  OAFWITH(16),PAVG  PRINT AVGFEDWITH
         BCTR  1,0                  DECREMENT REG 1 BY 1
         MVI   0(1),C'$'            PLACE DOLLAR SIGN
*
         ZAP   PAVG(7),PTSWITH(7)  ZAP GROSS PAY TO PCALC
*
* SUBPROGRAM CALL FOR CALCULATING AVERAGES
*
         LA    1,CAPARMS       R1 POINTS TO 1ST BYTE OF CNPPARM
         L     15,=V(CALCAVG)  VIRTUAL CONST STORED IN R15
         BALR  14,15            LINK R15 TO R14 AND BRANCH
*
         LA    1,OASWITH+12  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OASWITH(16),=X'4020202020202020206B2021204B2020'
         EDMK  OASWITH(16),PAVG  PRINT AVGSTATEWITH
         BCTR  1,0                  DECREMENT REG 1 BY 1
         MVI   0(1),C'$'            PLACE DOLLAR SIGN
*
         ZAP   PAVG(7),PTNETPAY(7)  ZAP GROSS PAY TO PCALC
*
* SUBPROGRAM CALL FOR CALCULATING AVERAGES
*
         LA    1,CAPARMS       R1 POINTS TO 1ST BYTE OF CNPPARM
         L     15,=V(CALCAVG)  VIRTUAL CONST STORED IN R15
         BALR  14,15            LINK R15 TO R14 AND BRANCH
*
         LA    1,OANPAY+12  PREPARE REG 1 FOR SIGNIFICANCE
         MVC   OANPAY(16),=X'4020202020202020206B2021204B2020'
         EDMK  OANPAY(16),PAVG  PRINT AVGNETPAY
         BCTR  1,0                  DECREMENT REG 1 BY 1
         MVI   0(1),C'$'            PLACE DOLLAR SIGN
*
         XPRNT EMPCTR,133   PRINT TOTAL NUM EMPLOYEES
         XPRNT OTGROSS,133  PRINT TOTAL GROSS PAY
         XPRNT OTFED,133    PRINT TOTAL FEDWITH
         XPRNT OTSTATE,133  PRINT TOTAL STATEWITH
         XPRNT OTNPAY,133   PRINT TOTAL NETPAY
*
*  STANDARD EXIT LINKAGE WITH RC OF 0
*
         SR    15,15          R15 = RETURN CODE OF 0
         DROP  4              DISSOCIATE DSECTS
*
         L     13,4(,13)      POINT R13 TO CALLER'S SAVE AREA
         L     14,12(,13)     RESTORE REGISTER 14
         LM    0,12,20(13)    RESTORE R0 THRU R12
*
         BR    14             RETURN TO CALLER
*
         LTORG
*
PROCSAVE DS    18F          PROCTBLE'S REGISTER SAVE AREA
*
PLOOPCTR DS    PL3'0'   USED AS LOOP CTR
*
PTOTAL   DC    PL10'0'  USED TO STORE TOTALS
PAVG     DC    PL7'0'  USED TO CALCULATE AVGS
*
PEMPGPAY DC    PL6'0'   PACKED CALCULATED EMPLOYEE GROSS PAY
PFEDWITH DC    PL6'0'   PACKED CALCULATED FEDERAL WITHHOLDING
PSTWITH  DC    PL6'0'   PACKED CALCULATED STATE WITHHOLDING
PEMPNPAY DC    PL6'0'   PACKED CALCULATED EMPLOYEE NET PAY
*
PTGRPAY  DC    PL7'0'   PACKED TOTAL GROSS EMPLOYEE PAY
PTFWITH  DC    PL7'0'   PACKED TOTAL FEDERAL WITHHOLDING
*
PTSWITH  DC    PL7'0'   PACKED TOTAL STATE WITHHOLDING
PTNETPAY DC    PL7'0'   PACKED TOTAL NET EMPLOYEE PAY
*
CNPPARMS DC    A(PEMPGPAY)  <- declared in PROCTBL
         DC    A(PEMPNPAY)  <- declared in PROCTBL
         DC    A(0)         <- declared in PAYROLL2 and passed to
*                           PROCTBL
         DC    A(PFEDWITH)  <- declared in PROCTBL
         DC    A(0)         <- declared in PAYROLL2 and passed to
*                           PROCTBL
         DC    A(PSTWITH)   <- declared in PROCTBL
*
CAPARMS  DC    A(PTOTAL)
         DC    A(PEMPCTR)
         DC    A(PAVG)
*
DETAIL   DC    C'0'     DETAIL LINE
OEMPID   DS    CL10     OUTPUT FIELD FOR EMPLOYEE ID
         DC    3C' '
OEMPNME  DS    CL25     OUTPUT FIELD FOR EMPLOYEE NAME
         DC    3C' '
OHRPAY   DS    CL7      OUTPUT FIELD FOR HOURLY PAY
         DC    4C' '
OHOURS   DS    CL7      OUTPUT FIELD FOR HOURS WORKED
         DC    4C' '
OGROSS   DS    CL14     OUTPUT FIELD FOR GROSS PAY
         DC    6C' '
OFEDWH   DS    CL14     OUTPUT FIELD FOR XDECO OF FEDERAL WH AMT
         DC    2C' '
OSTWH    DS    CL14     OUTPUT FIELD FOR XDECO OF STATE WH AMT
         DC    4C' '
ONETPAY  DS    CL14     OUTPUT FIELD FOR XDECO OF NET PAY AMT
*
TITLE1    DC   C'0'      TITLE1 LINE
          DC   50C' '
          DC   C'STATE OF ILLINOIS NATIONAL BANK'
          DC   38C' '
          DC   C'PAGE:'  PAGE NUMBER HEADER
          DC   4C' '
OPAGECTR  DS   CL1       OUTPUT FIELD FOR PAGE NUMBER
          DC   3C' '
*
TITLE2    DC   C' '     TITLE2 LINE
          DC   48C' '
          DC   C'SEMI-MONTHLY EMPLOYEE PAYROLL REPORT'
          DC   49C' '
*
TITLET    DC    62C' '  TITLET LINE
          DC    C'TOTALS'
          DC    65C' '
*
HEADER1   DC   C'0'                 HEADER1 LINE
OHEMPID   DC   C'EMPLOYEE'          HEADER: 'EMPLOYEE'
          DC   3C' '
OHEMPNME  DC   C'EMPLOYEE'          HEADER: 'EMPLOYEE'
          DC   21C' '
OHHRPAY   DC   C'HOURLY'            HEADER: 'HOURLY'
          DC   6C' '
OHHOURS   DC   C'HOURS'             HEADER: 'HOURS'
          DC   10C' '
OHGROSS   DC   C'EMPLOYEE'          HEADER: 'EMPLOYEE'
          DC   4C' '
OHFEDWH   DC   C'EMPLOYEE FEDERAL'  HEADER: 'EMPLOYEE FEDERAL'
          DC   2C' '  SPACES
OHSTWH    DC   C'EMPLOYEE STATE'    HEADER: 'EMPLOYEE STATE'
          DC   10C' '  SPACES
OHNETPAY  DC   C'EMPLOYEE'          HEADER: 'EMPLOYEE'
          DC   5C' '
*
HEADER2   DC    C' '                HEADER2 LINE
OH2EMPID  DC    C'ID'               HEADER: 'ID'
          DC    9C' '
OH2EMPNM  DC    C'NAME'             HEADER: 'NAME'
          DC    28C' '
OH2HRPAY  DC    C'PAY'              HEADER: 'PAY'
          DC    5C' '
OH2HOURS  DC    C'WORKED'           HEADER: 'WORKED'
          DC    9C' '
OH2GROSS  DC    C'GROSS PAY'        HEADER: 'GROSS PAY'
          DC    9C' '
OH2FEDWH  DC    C'WITHHOLDING'      HEADER: 'WITHHOLDING'
          DC    5C' '  SPACES
OH2STWH   DC    C'WITHHOLDING'      HEADER: 'WITHHOLDING'
          DC    11C' '  SPACES
OH2NTPAY  DC    C'NET PAY'          HEADER: 'NET PAY'
          DC    6C' '
*
HEADERL   DC    C' '                HEADERL LINE
OHLEMPID  DC    C'---------'       10 CHAR HEADER LINE
          DC    2C' '
OHLEMPNM  DC    C'-------------------------'  25 CHAR HDR LINE
          DC    3C' '
OHLHRPAY  DC    C'-------'           7 CHAR HEADER LINE
          DC    4C' '
OHLHOURS  DC    C'-------'           7 CHAR HEADER LINE
          DC    4C' '
OHLGROSS  DC    C'--------------'   14 CHAR HEADER LINE
          DC    4C' '
OHLFEDWH  DC    C'----------------'  16 CHAR HEADER LINE
          DC    2C' '  SPACES
OHLSTWH   DC    C'--------------'   14 CHAR HEADER LINE
          DC    4C' '  SPACES
OHLNTPAY  DC    C'--------------'   14 CHAR HEADER LINE
          DC    3C' '
*
EMPCTR    DC   C'0'                 EMPCTR LINE
          DC   6C' '
          DC   C'NUMBER OF EMPLOYEES:'
          DC   13C' '
OEMPCTR   DS   CL6                  OUTPUT FIELD FOR EMPLOYEE CT
          DC   87C' '
*
OTGROSS   DC   C'0'                 OTGGROSS LINE
          DC   10C' '
          DC   C'TOTAL GROSS PAY:'
          DC   6C' '
OTGPAY    DS   CL16                 OUTPUT FIELD FOR TOTAL GPAY
          DC   20C' '
          DC   C'AVERAGE GROSS PAY:'
          DC   7C' '
OAGPAY    DS   CL16                 OUTPUT FIELD FOR AVG GPAY
          DC   23C' '
*
OTFED     DC   C'0'                 OTFED LINE
          DC   C'TOTAL FEDERAL WITHHOLDING:'
          DC   6C' '
OTFWITH   DS   CL16                 OUTPUT FIELD FOR TOTAL FWITH
          DC   10C' '
          DC   C'AVERAGE FEDERAL WITHHOLDING:'
          DC   7C' '
OAFWITH   DS   CL16                 OUTPUT FIELD FOR AVG FWITH
          DC   23C' '
*
OTSTATE   DC   C'0'                 OTSTATE LINE
          DC   2C' '
          DC   C'TOTAL STATE WITHHOLDING:'
          DC   6C' '
OTSWITH   DS   CL16                 OUTPUT FIELD FOR TOTAL SWITH
          DC   12C' '
          DC   C'AVERAGE STATE WITHHOLDING:'
          DC   7C' '
OASWITH   DS   CL16                 OUTPUT FIELD FOR AVG SWITH
          DC   23C' '
*
OTNPAY    DC   C'0'                 OTNPAY LINE
          DC   12C' '
          DC   C'TOTAL NET PAY:'
          DC   6C' '
OTNETPAY  DS   CL16                 OUTPUT FIELD FOR TOTAL NPAY
          DC   22C' '
          DC   C'AVERAGE NET PAY:'
          DC   7C' '
OANPAY    DS   CL16                 OUTPUT FIELD FOR AVG NPAY
          DC   23C' '
*
$EMPCALC  DSECT     EMPLOYEES NET PAY DSECT
$EMPGPAY  DS   PL6  GROSS PAY
$EMPNPAY  DS   PL6  NET PAY
$FEDWITH  DS   PL6  FED WITHHOLDING AMOUNT
$STWITH   DS   PL6  STATE WITHHOLDING AMOUNT
*
CALCNPAY  CSECT
*
*  STANDARD ENTRY LINKAGE WITH R12 AS BASE REGISTER
*
         STM   14,12,12(13)  SAVE REGS IN CALLER'S SAVE AREA
         LR    12,15         COPY CSECT ADDR INTO R12
         USING CALCNPAY,12   ESTABLISH R12 AS THE BASE REG
         LA    14,NPAYSAVE    R14 POINTS TO THIS CSECT'S SAVE AREA
         ST    14,8(,13)     STORE ADDR OF THIS CSECT'S SAVE AREA
         ST    13,4(,14)     STORE ADDR OF CALLER'S SAVE AREA
         LR    13,14         POINT R13 AT THIS CSECT'S SAVE AREA
*
         LM    2,7,0(1)       R2 -> PEMPGPAY (6 BYTES)
*                             R3 -> PEMPNPAY (6 BYTES)
*                             R4 -> PFWHPCT  (4 BYTES)
*                             R5 -> PFEDWITH (6 BYTES)
*                             R6 -> PSWHPCT  (4 BYTES)
*                             R7 -> PSTWITH  (6 BYTES)
*
*  ESTABLISHING ADDRESSABILITY FOR DSECTS
*
         USING $EMPGPAY,2
         USING $EMPNPAY,3
         USING $FEDWITH,5
         USING $STWITH,7
*
         ZAP   PCALC(10),$EMPGPAY(6)        ZAP GPAY INTO PCALC
*
         MP    PCALC(10),0(4,4)    MULTIPLY GROSS BY FEDPCNT
*
         SRP   PCALC(10),64-5,5    ROUND GROSS PAY TO 2 DECIMALS
*
         ZAP   $FEDWITH(6),PCALC(10)   ZAP FEDWTH TO SMALLER FLD
*
         ZAP   PCALC(10),$EMPGPAY(6)  ZAP GROSSPAY INTO PCALC
*
         MP    PCALC(10),0(4,6)   MULTIPLY GROSS BY STPCNT
*
         SRP   PCALC(10),64-5,5    ROUND GROSS PAY TO 2 DECIMALS
*
         ZAP   $STWITH(6),PCALC(10)   ZAP PSTWITH TO SMALLER FLD
*
         ZAP   $EMPNPAY(6),$EMPGPAY(6)  ZAP GROSSPAY INTO NETPAY
*
         SP    $EMPNPAY(6),$FEDWITH(6)
         SP    $EMPNPAY(6),$STWITH(6)
*
*  STANDARD EXIT LINKAGE WITH RC OF 0
*
         SR    15,15          R15 = RETURN CODE OF 0
         DROP  2,3,5,7        DISSOCIATE DSECTS
*
         L     13,4(,13)      POINT R13 TO CALLER'S SAVE AREA
         L     14,12(,13)     RESTORE REGISTER 14
         LM    0,12,20(13)    RESTORE R0 THRU R12
*
         BR    14             RETURN TO CALLER
*
         LTORG
*
NPAYSAVE DS    18F          PROCTBLE'S REGISTER SAVE AREA
*
PCALC    DC    PL10'0'  USED TO CALCULATE WITHHOLDING AND TOTALS
*
*
$EMPCAVG  DSECT     EMPLOYEES' AVERAGES DSECT
$TOTAL    DS   PL10 TOTAL REPRESENTS ALL TOTALS
$EMPCTR   DS   PL3  EMPLOYEE COUNTER
$AVG      DS   PL10 AVG STORED HERE
*
CALCAVG  CSECT
*
*  STANDARD ENTRY LINKAGE WITH R12 AS BASE REGISTER
*
         STM   14,12,12(13)  SAVE REGS IN CALLER'S SAVE AREA
         LR    12,15         COPY CSECT ADDR INTO R12
         USING CALCAVG,12   ESTABLISH R12 AS THE BASE REG
         LA    14,AVGSAVE    R14 POINTS TO THIS CSECT'S SAVE AREA
         ST    14,8(,13)     STORE ADDR OF THIS CSECT'S SAVE AREA
         ST    13,4(,14)     STORE ADDR OF CALLER'S SAVE AREA
         LR    13,14         POINT R13 AT THIS CSECT'S SAVE AREA
*
         LM    2,4,0(1)       R2 -> PTOTAL  (10 BYTES)
*                             R3 -> PEMPCTR (3 BYTES)
*                             R4 -> PAVG    (7 BYTES)
*
*  ESTABLISHING ADDRESSABILITY FOR DSECTS
*
         USING $TOTAL,2
         USING $EMPCTR,3
         USING $AVG,4
*
         ZAP   $TOTAL(10),$AVG(7)  ZAP GROSS PAY TO PCALC
         SRP   $TOTAL(10),3,0         SRP TO FAKE REAL DIVISION
         DP    $TOTAL(10),$EMPCTR(3)  DIVIDE GROSS PAY BY
         SRP   $TOTAL(7),64-1,5       SRP THE RESULT IN QUO
         ZAP   $AVG(7),$TOTAL(7)   ZAP RESULT INTO PTGRPAY
*
*
*  STANDARD EXIT LINKAGE WITH RC OF 0
*
         SR    15,15          R15 = RETURN CODE OF 0
         DROP  2,3,4        DISSOCIATE DSECTS
*
         L     13,4(,13)      POINT R13 TO CALLER'S SAVE AREA
         L     14,12(,13)     RESTORE REGISTER 14
         LM    0,12,20(13)    RESTORE R0 THRU R12
*
         BR    14             RETURN TO CALLER
*
         LTORG
*
AVGSAVE  DS    18F          PROCTBLE'S REGISTER SAVE AREA
*
         END   PAYROLL2
/*
//*
//* THE FOLLOWING IS THE INPUT DATA SET
//*
//FT05F001 DD DSN=KC02322.CSCI360.DATASP24(DATA9),DISP=SHR
//*
//* THE FOLLOWING IS THE OUTPUT DATA SET
//*
//FT06F001 DD SYSOUT=*
//*
//
